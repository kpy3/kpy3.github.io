<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: erlang | Всячина]]></title>
  <link href="http://kpy3.github.io/blog/categories/erlang/atom.xml" rel="self"/>
  <link href="http://kpy3.github.io/"/>
  <updated>2013-10-04T11:04:32+02:00</updated>
  <id>http://kpy3.github.io/</id>
  <author>
    <name><![CDATA[Сергей Елин]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Как собрать Erlang c wxWidgets на MacOS X 10.8.x]]></title>
    <link href="http://kpy3.github.io/blog/2013/10/03/kak-sobrat-erlang-c-wxwidgets-na-macos-x-10-dot-8-x/"/>
    <updated>2013-10-03T17:05:00+02:00</updated>
    <id>http://kpy3.github.io/blog/2013/10/03/kak-sobrat-erlang-c-wxwidgets-na-macos-x-10-dot-8-x</id>
    <content type="html"><![CDATA[<p>UPDATE: Решение проверено и работает на MacOS X 10.8.5 и XCode/CLT 4.6.3. На XCode/CLT 5.0 beta и MacOS X 10.9 Maverics работать не будет.</p>

<p>У Erlang есть специальное средство получения различных характеристик локальной или удалённой ноды &ndash; observer. Штука замечательная, однако, требующая библиотеки wxWidgets, что затрудняет использование данного инструмента на MacOS X, так как официальные релизы последней не очень-то хорошо работают на MacOS X  в 64-bit режиме.  Поэтому сборки Erlang для MacOS X как правило поставляются либо без wx, либо с wx, но он всё равно не работает так как не хватает необходимых библиотек. Ситуация неприятная, но не безнадёжная.</p>

<!-- more -->


<p>Установка wxWidgets
Для того чтобы исправить ситуацию необходимо сначала установить wxWidgets версии 2.9.x. Официальная документация рекомендует скачать и установить необходимую версию вручную, однако, я привык полагаться в таких вопросах на менеджеры пакетов, чтобы не получить в будущем каких-либо проблем с разными версиями библиотек.</p>

<p>Homewbrew, который я использую для управления всякими сторонними программами и библиотеками, предлагает использовать wxmac – несколько урезанную версию wxWidgets для MacOS X. Однако у этого пакета есть одна проблема: если его собрать с опциями по-умолчанию, Erlang не сможет слинковать свой драйвер wxWidgets. Поэтому при сборке wxmac необходимо указать ключик –disable-monolithic:</p>

<p><code>bash [lineos:false]
$ brew install --disable-monolithic wxmac
</code></p>

<p>После сборки с этим флажком вывод wx-config –libs должен выглядеть примерно так:</p>

<p><code>bash [linenos:false]
$ wx-config --libs
-L/usr/local/Cellar/wxmac/2.9.5.0/lib -framework IOKit
-framework Carbon -framework Cocoa -framework AudioToolbox
-framework System -framework OpenGL -framework QuickTime
-lwx_osx_cocoau_xrc-2.9 -lwx_osx_cocoau_webview-2.9
-lwx_osx_cocoau_html-2.9 -lwx_osx_cocoau_qa-2.9
-lwx_osx_cocoau_adv-2.9 -lwx_osx_cocoau_core-2.9
-lwx_baseu_xml-2.9 -lwx_baseu_net-2.9 -lwx_baseu-2.9
</code></p>

<p>Всё, wxWidgets установлена как надо, теперь нужно собрать Erlang, который сможет её использовать.</p>

<p>Установка Erlang
В этой части мы рассмотрим два типа установки Erlang, из homebrew и из исходников. Думаю по приведённым заметкам несложно будет собрать Erlang из других менеджеров пакетов или kerl.</p>

<p>Сборка с помощью homebrew
Чтобы собрать пакет, а не использовать уже собранный, homebrew предоставляет специальный параметр команды install &mdash;build-from-source. Однако этого параметра недостаточно.</p>

<p>По-умолчанию homebrew накладывает некоторые ограничения на окружение в процессе сборки, поэтому для того чтобы конфигуратор Erlang смог найти установленный в /usr/local wxWidgets необходимо указать параметр &mdash;env=std.</p>

<p>Кроме того, homebrew соберёт erlang с помощью clang, однако при попытке запустить что-то использующее wxWidgets Erlang VM будет падать. Чтобы избежать этого добавим ещё один параметр &mdash;cc=gcc-4.2.
Полностью строка установки Erlang c помощью homebrew будет выглядеть так:</p>

<p>1
$ brew -v install &mdash;env=std &mdash;build-from-source &mdash;cc=gcc-4.2 erlang
Чтобы убедиться что Erlang будет использовать вашу свежесобраную библиотеку wxWidgets внимательно посмотрите на вывод configure. Если вы увидите в нём следующее:</p>

<p>&hellip;
checking for debug build of wxWidgets&hellip; checking for wx-config&hellip; /usr/local/bin/wx-config
checking for wxWidgets version >= 2.8.4 (&mdash;unicode &mdash;debug=yes)&hellip; yes (version 2.9.5)
checking for wxWidgets static library&hellip; no
checking for standard build of wxWidgets&hellip; checking for wx-config&hellip; (cached) /usr/local/bin/wx-config
checking for wxWidgets version >= 2.8.4 (&mdash;unicode &mdash;debug=no)&hellip; yes (version 2.9.5)
checking for wxWidgets static library&hellip; no
checking if wxwidgets have opengl support&hellip; yes
&hellip;</p>

<p>то всё в порядке, Erlang соберётся с поддержкой wxWidgets. Если нет, это повод прервать установку и разобраться в причинах такого результата.</p>

<p>Проверяем что Erlang собрался корректно:</p>

<p>1
2
3
4
5
6
7
$ erl
Erlang R16B02 (erts-5.10.3) [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]
Eshell V5.10.3 (abort with ^G)
1> wx:demo().
ok
2> observer:start().
ok</p>

<p>Установка из исходников
Если вы по каким-то причинам не используете homebrew, можно собрать Erlang с поддержкой wxWidgets из исходников:</p>

<p>1
2
3
4
$ git clone git@github.com:erlang/otp.git erlang-otp
$ cd erlang-otp
$ git co OTP_R16B02
$ ./configure &mdash;disable-debug &mdash;enable-kernel-poll &mdash;enable-threads &mdash;enable-dynamic-ssl-lib &mdash;enable-shared-zlib &mdash;enable-smp-support &mdash;with-dynamic-trace=dtrace &mdash;enable-hipe &mdash;enable-darwin-64bit &mdash;prefix=/opt/erlang &amp;&amp; make &amp;&amp; sudo make install
Если на предыдущем этапе компиляция и установка не прервались с ошибкой линковки драйвера wx (или какой-то другой), в каталоге /opt/erlang будет лежать Erlang с поддержкой wxWidgets. Проверяем:</p>

<p>1
2
3
4
5
6
7
8
$ /opt/erlang/bin/erl
Erlang R16B02 (erts-5.10.3) [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]</p>

<p>Eshell V5.10.3 (abort with ^G)
1> wx:demo().
ok
2> observer:start().
ok</p>

<p>Вот, собственно, и всё.</p>
]]></content>
  </entry>
  
</feed>
